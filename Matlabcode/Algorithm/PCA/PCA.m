clear;clc;
%一种降维处理的计算方法（减少变量数目），适用于变量数目十分多的评价问题
%输入矩阵
X=[
40.4 24.7 7.2 6.1 8.3 8.7 2.442 20   
25 12.7 11.2 11 12.9 20.2 3.542 9.1   
13.2 3.3 3.9 4.3 4.4 5.5 0.578 3.6   
22.3 6.7 5.6 3.7 6 7.4 0.176 7.3   
34.3 11.8 7.1 7.1 8 8.9 1.726 27.5   
35.6 12.5 16.4 16.7 22.8 29.3 3.017 26.6   
22 7.8 9.9 10.2 12.6 17.6 0.847 10.6   
48.4 13.4 10.9 10.9 10.9 13.9 1.772 17.8   
40.6 19.1 19.8 19 29.7 39.6 2.449 35.8   
24.8 8 9.8 8.9 11.9 16.2 0.789 13.7   
12.5 9.7 4.2 4.2 4.6 6.5 0.874 3.9   
1.8 0.6 0.7 0.7 0.8 1.1 0.056 1   
32.3 13.9 9.4 8.3 9.8 13.3 2.126 17.1   
38.5 9.1 11.3 9.5 12.2 16.4 1.327 11.6   
26.2 10.1 5.6 15.6 7.7 30.1 0.126 25.9
];

%输入信息保留率
T=0.9; 
%输入评价方案
% 0表示正向指标/效益型，1表示负向指标/成本型，2为区间型
P=[0 0 0 0 0 0 0 0];
P=(P==0)-(P==1) %转码

%%%%%%%%%%%%%%%%%%%%%%%%%
%标准化处理
[n,m]=size(X);
xbar=mean(X);
varx=var(X);
for i=1:1:n
    for j=1:1:m
            Xnew(i,j)=(X(i,j)-xbar(j))/sqrt(varx(j));
    end
end

%计算相关系数矩阵与贡献值
%贡献率越大，包含的变量信息越大，一般要求贡献率达到85%以上，
% 才能保证原始变量的绝大多数信息
R=cov(Xnew);
[V,D]=eig(R);
D=diag(D);
C=D/sum(D) ;
%选取对应主成分和特征向量
Kvar=max(C);
M=C;
while sum(C.*(C>=Kvar))<=T
    M=C-C.*(C>=Kvar);
    Kvar=max(M);
end
P0=C>=Kvar; %主成分的判定
disp('选择的主成分个数：')
k=sum(P0)
disp('主成分的判定：')
[P0,C]
X0=Xnew(:,P0);
V0=V(:,P0);

%计算主成分的得分
disp('贡献率与累计贡献率：')
C0=sort(C,"descend");
[C0,cumsum(C0)]

Xp=Xnew.*P;
F=Xp*V0;
TF=sum(F,2);
disp('各方案得分及其总分：')
LF=[F,TF,(1:n)'];
LF0=sortrows(LF,k+1,"descend")%|得分矩阵|总得分|方案编号|
LF0=sortrows(LF0,k+2);%|得分矩阵|总得分|方案编号|

