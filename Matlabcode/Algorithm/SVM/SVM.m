clear;clc;
%解决SVP分类问题
%输入矩阵[X|T],X为高维度向量，T为类
A=[
0.9 0.34 1.53 1     
0.88 0.23 1.67 1     
0.92 0.28 1.43 1     
0.89 0.14 1.24 1     
0.78 0.35 1.8 1     
0.81 0.26 2.01 1     
0.72 0.18 1.75 1     
0.93 0.22 0.99 1     
0.82 0.26 1.4 1     
0.78 0.27 1.67 -1    
0.78 0.27 1.53 -1    
0.72 0.18 1.2 -1    
0.69 0.16 1.28 -1    
0.63 0.15 0.88 -1    
0.58 0.22 1.42 -1    
0.81 0.18 1.59 -1    
0.67 0.21 1.21 -1    
0.65 0.16 1.37 -1
];

X=A(:,1:size(A,2)-1);Y=A(:,size(A,2));
n0=sum((Y+1)/2);n1=-sum((Y-1)/2);
%%%%%%%%%%%%%%%%%%%
%数据预处理
[n,m]=size(X);
for i=1:m
    % X0(:,i)=(X(:,i)-mean(X(:,i)))/std(X(:,i));
    X0(:,i)=(X(:,i)-min(X(:,i)))/(max(X(:,i))-min(X(:,i)));
end
%%%%%%%%%%空间相似度算法
%对偶函数
t=(X0*X0');
M=(Y*Y').*t;
f=@(x)(-sum(x)+0.5*x'*M*x);
% Kernel函数
C=0.5;
t0=exp(-C*(pdist(X0)));
t0=squareform(t0)+diag(ones(n,1));
t0=(t0-min(t0))./(max(t0)-min(t0));
M0=(Y*Y').*t0;
f=@(x)(-sum(x)+0.5*x'*M0*x);
%%%%%%%%%%
x0=ones(n,1);
A=[];
b=[];
Aeq=Y';
beq=0;
lb=zeros(n,1);
ub=[];
[a,fval] = fmincon(f,x0,A,b,Aeq,beq,lb,ub);
%求解超平面
w=sum(a.*X0.*Y);
bm=Y-X0*w';

epi=@(b)sum(max(0,1-Y.*(bm+b)));
[b0,epival]=fmincon(epi,0,[],[],[],[],[],[]);

%结果显示
finval=(bm+b0);
Yp=(finval>0)-(finval<0);
disp('最终结果');[finval,Yp]
disp('误差度%:');sum(abs(Yp-Y)/2)/n*100




